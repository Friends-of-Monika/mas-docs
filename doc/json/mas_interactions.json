{
  "MASClickZoneManager": {
    "type": "class",
    "identifier": "MASClickZoneManager",
    "class_bases": [
      "object"
    ],
    "line": 424,
    "docstring": "Manages clickzones, with varying zoom levels.\nUse to automate caching and stuff with clickzones.\n\nACCESSING ZONES:\n    use backet notation to access a clickzone:\n    zonemanager[zone_key]\n\n    This takes current zoom into account, and auto zooms something\n    if no clickzone exists.\n\n    NOTE: use get to get for a specific zoom level\n\nCONTAINS:\n    'in' is allowed for checking zone_keys.\n\nITERABLE:\n    this will iterate over zone_keys and clickzones at the current\n    zoom level.",
    "class_functions": [
      {
        "type": "function",
        "identifier": "__init__",
        "line": 446,
        "function_args": {
          "args": [
            "self"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        }
      },
      {
        "type": "function",
        "identifier": "__contains__",
        "line": 458,
        "function_args": {
          "args": [
            "self",
            "item"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        }
      },
      {
        "type": "function",
        "identifier": "__getitem__",
        "line": 461,
        "function_args": {
          "args": [
            "self",
            "key"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Key should be the zone_key.\nThis will get the clickzone for the current zoom level, generating\nit if not found."
      },
      {
        "type": "function",
        "identifier": "__iter__",
        "line": 469,
        "function_args": {
          "args": [
            "self"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        }
      },
      {
        "type": "function",
        "identifier": "add",
        "line": 473,
        "function_args": {
          "args": [
            "self",
            "zone_key",
            "cz"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Adds a clickzone to this manager.\nNOTE: will NOt override an existing zone_key\nNOTE: you must add the clickzone at the default zoom level for\n    zoom algs to work.\n\nIN:\n    zone_key - key to use to represnt this zone\n    cz - MASClickZone to add.\n        Assumed to work for default zoom level"
      },
      {
        "type": "function",
        "identifier": "_cz_iter",
        "line": 496,
        "function_args": {
          "args": [
            "self"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Iterates over all clickzones in this clickzone manager, for\nall zoom levels.\n\nOutput is a tuple of:\n    [0] zone_key\n    [1] zoom level\n    [2] clickzone"
      },
      {
        "type": "function",
        "identifier": "_debug",
        "line": 510,
        "function_args": {
          "args": [
            "self",
            "value"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Sets the debug_back value for all clickzones\n\nIN:\n    value - value to set to _debug_back"
      },
      {
        "type": "function",
        "identifier": "get",
        "line": 520,
        "function_args": {
          "args": [
            "self",
            "zone_key",
            "zl"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Gets a clickzone from this manager, from a zoom level.\n\nGenerates the clickzone if not exist for this zoom level.\nNOTE: this will generate ALL clickzones for a zoom level for\nconsistency and speed.\n\nIN:\n    zone_key - key of zone to get\n    zl - zoom level of zone to get\n\nRETURNS: MASClickZone object, or None if failed to get"
      },
      {
        "type": "function",
        "identifier": "remove",
        "line": 539,
        "function_args": {
          "args": [
            "self",
            "zone_key"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Removes a clickzone from this manager.\n\nIN:\n    zone_key - key of the zone to remove"
      },
      {
        "type": "function",
        "identifier": "set_disabled",
        "line": 557,
        "function_args": {
          "args": [
            "self",
            "zone_key",
            "value"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Sets all clickzones with the given zonekey's disabled prop.\n\nIN:\n    zone_key - key of the clickzone to change\n    value - value to set disabled to"
      },
      {
        "type": "function",
        "identifier": "zoom_to",
        "line": 570,
        "function_args": {
          "args": [
            "self",
            "zoom_level"
          ],
          "pos_only_args": [],
          "defaults": [],
          "kw_defaults": [],
          "kw_only_args": [],
          "kw_arg": null,
          "var_arg": null
        },
        "docstring": "Fills zoom cache with Clickzones for a zoom level\n\nIN:\n    zoom_level - zoom level to generate clickzones for"
      }
    ]
  },
  "get_vx": {
    "type": "function",
    "identifier": "get_vx",
    "line": 683,
    "function_args": {
      "args": [
        "zone_enum"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Get vx list of a zone enum\n\nIN:\n    zone_enum - zone enum to get vertex list for\n\nRETURNS: vertex list, or empty if not found"
  },
  "z_vx_list_zoom": {
    "type": "function",
    "identifier": "z_vx_list_zoom",
    "line": 695,
    "function_args": {
      "args": [
        "zoom_level",
        "zone_enum"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Generates a vertex list from the given zoom and zone enum\n\nIN:\n    zoom_level - zoom level to generate vertex list for\n    zone_enum - zone enum to generate vertex list for\n\nRETURNS:\n    list of vertexes. May be empty if not valid zone enum"
  },
  "vx_list_zoom": {
    "type": "function",
    "identifier": "vx_list_zoom",
    "line": 713,
    "function_args": {
      "args": [
        "zoom_level",
        "vx_list"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Generates a vertex list from the given zoom\n\nIN:\n    zoom_level - zoom level to generate vertex list\n    vx_list - list of vertexes to geneate new list for\n\nRETURNS: list of vertexes"
  },
  "_vx_list_zoom": {
    "type": "function",
    "identifier": "_vx_list_zoom",
    "line": 737,
    "function_args": {
      "args": [
        "zoom_level",
        "vx_list",
        "zoom_out"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Generates vertex list for zooming.\n\nIN:\n    zoom_level zoom level to generate vertex list for\n    vx_list - list of vetex points to adjust for zoom.\n        NOTE: we generate a new list, so dont worry about this changing\n    zoom_out - True if we are zooming out, False if zooming in\n\nRETURNS: adjustd list of vertexes"
  }
}