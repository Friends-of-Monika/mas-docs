{
  "_generate_old_image": {
    "type": "function",
    "identifier": "_generate_old_image",
    "function_args": {
      "args": [
        "disp"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Generates an image for the old-style weather.\n\nIN:\n    disp - displayable to pass to renpy.image\n\nRETURNS: the created image tag"
  },
  "weatherProgress": {
    "type": "function",
    "identifier": "weatherProgress",
    "function_args": {
      "args": [],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Runs a roll on mas_shouldRain() to pick a new weather to change to after a time between half an hour - one and a half hour\n\nRETURNS:\n    - True or false on whether or not to call spaceroom"
  },
  "loadMWData": {
    "type": "function",
    "identifier": "loadMWData",
    "function_args": {
      "args": [],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Loads persistent MASWeather data into the weather map\n\nASSUMES: weather map is already filled"
  },
  "saveMWData": {
    "type": "function",
    "identifier": "saveMWData",
    "function_args": {
      "args": [],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Saves MASWeather data from weather map into persistent"
  },
  "unlockedWeathers": {
    "type": "function",
    "identifier": "unlockedWeathers",
    "function_args": {
      "args": [],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Returns number of unlocked weather items"
  },
  "_weather_rain_entry": {
    "type": "function",
    "identifier": "_weather_rain_entry",
    "function_args": {
      "args": [
        "_old"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Rain start programming point"
  },
  "_weather_rain_exit": {
    "type": "function",
    "identifier": "_weather_rain_exit",
    "function_args": {
      "args": [
        "_new"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "RAIN stop programming point"
  },
  "_weather_snow_entry": {
    "type": "function",
    "identifier": "_weather_snow_entry",
    "function_args": {
      "args": [
        "_old"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Snow entry programming point"
  },
  "_weather_snow_exit": {
    "type": "function",
    "identifier": "_weather_snow_exit",
    "function_args": {
      "args": [
        "_new"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Snow exit programming point"
  },
  "_weather_thunder_entry": {
    "type": "function",
    "identifier": "_weather_thunder_entry",
    "function_args": {
      "args": [
        "_old"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Thunder entry programming point"
  },
  "_weather_thunder_exit": {
    "type": "function",
    "identifier": "_weather_thunder_exit",
    "function_args": {
      "args": [
        "_new"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Thunder exit programming point"
  },
  "_weather_overcast_entry": {
    "type": "function",
    "identifier": "_weather_overcast_entry",
    "function_args": {
      "args": [
        "_old"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Overcast entry programming point"
  },
  "_weather_overcast_exit": {
    "type": "function",
    "identifier": "_weather_overcast_exit",
    "function_args": {
      "args": [
        "_new"
      ],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Overcast exit programming point"
  },
  "shouldRainToday": {
    "type": "function",
    "identifier": "shouldRainToday",
    "function_args": {
      "args": [],
      "pos_only_args": [],
      "defaults": [],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    }
  },
  "_determineCloudyWeather": {
    "type": "function",
    "identifier": "_determineCloudyWeather",
    "function_args": {
      "args": [
        "rain_chance",
        "thunder_chance",
        "overcast_chance",
        "rolled_chance"
      ],
      "pos_only_args": [],
      "defaults": [
        "None"
      ],
      "kw_defaults": [],
      "kw_only_args": [],
      "kw_arg": null,
      "var_arg": null
    },
    "docstring": "Determines if weather should be rainiy/thunder/overcase, or none of\nthose.\n\nIN:\n    rain_chance - chance of rain out of 100\n    thunder_chance - chance of thunder out of 100\n        NOTE: this should be percentage based on rain chance, i.e.:\n        thunder_chance * (rain_chance as %)\n    overcast_chance - chance of overcast out of 100\n    rolled_chance - if passed, then we use that chance instead of\n        generating a random chance. None means we generate our\n        own chance.\n        (Default: None)\n\nRETURNS:\n    appropriate weather type, or None if neither of these weathers."
  }
}